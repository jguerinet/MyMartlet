/*
 * Copyright 2014-2017 Julien Guerinet
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Setting up the release keystore properties
def props = new Properties()
if (rootProject.file("util/private.properties").exists())
    props.load(new FileInputStream(rootProject.file("util/private.properties")))

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    signingConfigs {
        debug {
            storeFile file('../util/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        if (rootProject.file("util/private.properties").exists()) {
            release {
                storeFile file(props.storeFile)
                storePassword props.storePassword
                keyAlias props.keyAlias
                keyPassword props.keyPassword
            }
        }
    }

    defaultConfig {
        applicationId "com.guerinet.mymartlet"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 25
        versionName "2.3.2"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField 'boolean', 'REPORT_CRASHES', 'false'
            versionNameSuffix "." + defaultConfig.versionCode
        }

        beta {
            initWith debug
            if (rootProject.file("util/private.properties").exists())
                signingConfig signingConfigs.release
            buildConfigField 'boolean', 'REPORT_CRASHES', 'true'
        }

        release {
            if (rootProject.file("util/private.properties").exists())
                signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'REPORT_CRASHES', 'true'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        warning 'MissingTranslation'
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent,
                    "MyMartlet-${variant.buildType.name}.apk")
        }
    }
}

// Set the Facebook/Twitter keys from the properties file
// May be null if property file is not defined
android.buildTypes.each { type ->
    type.buildConfigField 'String', 'TWITTER_KEY', props.twitterKey ?: '"NA"'
    type.buildConfigField 'String', 'TWITTER_SECRET', props.twitterSecret ?: '"NA"'
    type.resValue 'string', 'facebook_app_id', props.facebookAppId ?: '"NA"'
    type.resValue 'string', 'facebook_provider', 'com.facebook.app.FacebookContentProvider' +
            props.facebookAppId
}

// Versions for libraries with multiple dependencies
def version_butterknife = "8.5.1"
def version_dagger = "2.10"
def version_dbflow = "4.0.2"
def version_gps = "10.2.1"
def version_okhttp = "3.7.0"
def version_retrofit = "2.2.0"
def version_support = "25.3.1"

dependencies {
    compile "com.android.support:appcompat-v7:${version_support}"
    compile "com.android.support:customtabs:${version_support}"
    compile "com.android.support:cardview-v7:${version_support}"
    compile "com.android.support:design:${version_support}"
    compile "com.android.support:recyclerview-v7:${version_support}"
    compile "com.android.support:support-v4:${version_support}"
    compile("com.crashlytics.sdk.android:crashlytics:2.6.7@aar") {
        transitive = true;
    }
    compile "com.facebook.android:facebook-android-sdk:4.22.0"
    compile "com.github.Raizlabs.DBFlow:dbflow:${version_dbflow}"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${version_dbflow}"
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${version_dbflow}"
    compile "com.google.android.gms:play-services-analytics:${version_gps}"
    compile "com.google.android.gms:play-services-maps:${version_gps}"
    compile "com.google.dagger:dagger:${version_dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${version_dagger}"
    provided "org.glassfish:javax.annotation:10.0-b28"
    compile "com.guerinet:android-utils:1.2.1"
    compile "com.guerinet:form-generator:3.2.2"
    compile "com.jakewharton:butterknife:${version_butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${version_butterknife}"
    compile "com.jakewharton.threetenabp:threetenabp:1.0.5"
    compile "com.jakewharton.timber:timber:4.5.1"
    compile "com.orhanobut:hawk:2.0.1"
    compile "com.squareup.moshi:moshi:1.4.0"
    compile "com.squareup.okhttp3:logging-interceptor:${version_okhttp}"
    compile "com.squareup.okhttp3:okhttp:${version_okhttp}"
    compile "com.squareup.okio:okio:1.12.0"
    compile "com.squareup.picasso:picasso:2.5.2"
    compile "com.squareup.retrofit2:converter-moshi:${version_retrofit}"
    compile "com.squareup.retrofit2:retrofit:${version_retrofit}"
    compile("com.twitter.sdk.android:twitter:2.3.2@aar") {
        transitive = true;
    }
    compile "com.viewpagerindicator:library:2.4.1@aar"
    // Don't update this as 1.10.x breaks the converters
    compile "org.jsoup:jsoup:1.9.1"
}

apply plugin: 'com.google.gms.google-services'